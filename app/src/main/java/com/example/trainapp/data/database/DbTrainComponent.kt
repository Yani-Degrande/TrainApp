package com.example.trainapp.data.database

import androidx.room.Entity
import androidx.room.PrimaryKey
import com.example.trainapp.model.TrainComponent
import com.example.trainapp.model.TrainComponentType

/**
 * Represents a train component entity in the database.
 *
 * @property id Unique identifier of the train component, autogenerated.
 * @property type The type of the train component (e.g., engine, carriage).
 * @property subtype A more specific categorization of the train component.
 * @property image URL or reference to an image of the train component.
 * @property descriptionImage URL or reference to an image used for the description of the train component.
 * @property description Textual description of the train component.
 */
@Entity(tableName = "trainComponents")
data class DbTrainComponent(
    @PrimaryKey(autoGenerate = true)
    val id: Int = 0,
    val type: TrainComponentType,
    val subtype: String,
    val image: String,
    val descriptionImage: String,
    val description: String,
)

/**
 * Converts a [TrainComponent] to a [DbTrainComponent] for database storage.
 *
 * @receiver The [TrainComponent] instance to be converted.
 * @return A [DbTrainComponent] instance corresponding to the receiver.
 */
fun TrainComponent.asDbTrainComponent(): DbTrainComponent {
    return DbTrainComponent(
        id = id,
        type = type,
        subtype = subtype,
        image = image,
        descriptionImage = descriptionImage,
        description = description,
    )
}

/**
 * Converts a [DbTrainComponent] from the database to a domain [TrainComponent].
 *
 * @receiver The [DbTrainComponent] instance to be converted.
 * @return A domain [TrainComponent] instance corresponding to the receiver.
 */
fun DbTrainComponent.asDomainTrainComponent(): TrainComponent {
    return TrainComponent(
        id = id,
        type = type,
        subtype = subtype,
        image = image,
        descriptionImage = descriptionImage,
        description = description,
    )
}

/**
 * Converts a list of [DbTrainComponent]s from the database to a list of domain [TrainComponent]s.
 *
 * @receiver The list of [DbTrainComponent] instances to be converted.
 * @return A list of domain [TrainComponent] instances corresponding to the receiver.
 */
fun List<DbTrainComponent>.asDomainTrainComponents() = map { it.asDomainTrainComponent() }
